
require('dotenv').load();

var expect = require('chai').expect,
  SimpleGoodreads = require('../index'),
  goodreads = new SimpleGoodreads();

describe('#Searching Books', function() {
  describe('searchBook', function() {
    it('should return null if there is no match', function(done) {
      goodreads.searchBook('', function (err, data) {
        expect(data).to.be.null;
        done();
      });
    });

    it('should return a book if there is a match', function(done) {
      goodreads.searchBook('Harry Potter', function (err, book) {
        expect(book).to.be.an('object');
        expect(book).to.have.property('id');
        expect(book).to.have.property('title').that.is.a('string');
        expect(book).to.have.property('author').that.is.a('string');
        expect(book).to.have.property('author_id');
        expect(book).to.have.property('publication_year');
        expect(book).to.have.property('image_url');
        expect(book).to.have.property('rating');
        done();
      });
    });
  });

  describe('searchBooks', function() {
    it('should return null if there is no match', function(done) {
      goodreads.searchBooks('', function (err, data) {
        expect(data).to.be.null;
        done();
      });
    });

    it('should return an array of books if there is a match', function(done) {
      goodreads.searchBooks('George Orwell', function (err, books) {
        expect(books).to.have.length.above(1);
        expect(books).to.be.instanceof(Array);
        books.forEach(function (book) {
          expect(book).to.have.property('title');
          expect(book).to.have.property('author');
          expect(book).to.have.property('author_id');
          expect(book).to.have.property('publication_year');
          expect(book).to.have.property('image_url');
          expect(book).to.have.property('rating');
        });
        done();
      });
    });
  });
});

describe('#Author Info', function() {
  it('should return null if there is no match', function(done) {
    goodreads.authorInfo('', function (err, data) {
      expect(data).to.be.null;
      done();
    });
  });

  it('should return the author\'s info if there is a match', function(done) {
    goodreads.authorInfo('George Orwell', function (err, author) {
      expect(author).to.be.an('object');
      expect(author).to.have.property('id');
      expect(author).to.have.property('name');
      expect(author).to.have.property('link');
      expect(author).to.have.property('image_url');
      expect(author).to.have.property('about');
      expect(author).to.have.property('works_count');
      expect(author).to.have.property('gender');
      expect(author).to.have.property('hometown');
      expect(author).to.have.property('born_at');
      expect(author).to.have.property('died_at');
      done();
    });
  });

});
