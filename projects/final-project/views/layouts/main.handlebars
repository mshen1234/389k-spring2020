<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Book Reviews</title>
    <!--<link rel="stylesheet" type="text/css" href="/css/main.css">-->
    <!--
    <h1 id="myHeader">The number of book reviews written is: </h1>
    <h2 id="myHeader2">num</h2>
-->
    <div class="nav">
      <div>
        <a href="/about">About Page</a>
        <a href="/getRandomBookOfWeek">Get a random book of the week</a>
        <a href="/getClassic">Get a classic genre book</a>
        <a href="/getSciFy">Get a science fiction book</a>
        <a href="/getNewRandomBook">Get a new random book</a>
        <a href="/getHistorical">Get a historical fiction book</a>
      </div>
    </div>

</head>
<body>

    {{{body}}}
    <script src="/socket.io/socket.io.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
	<script>
        /*
            Allow client to use socket.io
                1. Include socket.io javascript library
                2. Have client open it's end of the web socket -> var socket = io()

            Now client can listen to messages from server
                -> socket.on(message, function(msg)){...}

            And emit message to server via web sockets
                -> socket.emit(message, contentOfMessage){...}
        */
        //============OPEN UP SOCKET CONNECTION HERE=============



        var socket = io();



        //=======================================================

        /*
            TASK 1 (CLIENT END): Handle new chat message from client
            Steps to complete task from client end:
                1. Send/emit a message to server when a new chat message is submitted
                2. Listen for message from server when some client created a new chat message
                    - The HTML page should update to show the new message that was sent
        */
/*
        //Task 1 - Step 1: Send/emit a message to server when a new chat message is submitted
        $('#box').submit(function(){ //When send button is pressed
            socket.emit('chat message', $('#m').val())
            $('#m').val('');
            return false; //Ensures the page does not reload
        });
        //Task 1 - Step 2: Listen for message from server when some client created a new chat message and update HTML page
        socket.on('chat message', function(msg) {
            $('#messages').append($('<li>').text(io.engine.clientsCount));

        });
*/
        /*
            TASK 2 (CLIENT END): Handle a new movie submission
            Steps to complete task 2 from client end:
                1. Send a POST request when client has completed and submitted new movie form
                2. Listen for message from server when some client creates a new movie
                    - The page should update to show the new movie that was created
        */

        //Task 2 - Step 1: Send a POST request when client has completed and submitted new movie form
        $('#book').submit(function() { //When "post" button is pressed
            var genre = $('#genre').val();
            var title = $('#title').val();
            var pages = $('#pages').val();
            var year = $('#year').val();
            $('#genre').val('');
            $('#title').val('');
            $('#pages').val('');
            $('#year').val('');
            $.ajax({
                type: "POST",
                url: '/book',
                data: {
                    title: title,
                    genre: genre,
                    pages: pages,
                    year: year,
                    reviews: []
                },
                sucess: function(data, status) {
                    console.log(data);
                }
            });
            return false; //Ensures the page does not reload
        });

        socket.on('changed',function(num){
          console.log("here is num")
          console.log(num);
          document.getElementById("myHeader2") = num;
        });
        //Task 2 - Step 2: Listen for message from server when some client creates a new movie

        socket.on('new book', function(mov) {
          $('#bokList').append($('<article><li class=title>').text(mov.title + ': ' + mov.genre +': '+ mov.pages
  +' pages: published'+ mov.year +': Review'+ mov.reviews));
        })

        socket.on('rendering book', function(mov) {
            $('#bokList').append($('<li>').text(mov.title + ': ' + mov.genre +':'+ mov.pages
+':'+ mov.year +':'+ mov.reviews));
        })

        socket.on('userLog', function(mov) {
          $('#myHeader2').text(mov)
        })

        socket.on('disconnect', function(mov) {
            $('#myHeader2').text(mov)
        });

	</script>
</body>
</html>
